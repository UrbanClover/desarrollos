# Snakefile para WES

import sys
sys.path.append('ngs')
import sample_ids
SAMPLE = sample_ids.get_sample_ids('data')
print("Muestras detectadas: ", SAMPLE)


# Referencia

REF_GENOME = "/mnt/lustre/scratch/nlsas/home/otras/hcx/iba/ngs/ref/wes_ref/GRCh38.p14.genome.fa"

# Rules

localrules:  all

rule all:
        input:
                trim = expand('resultados/trimmed/{S}_trimmed_{N}.fastq.gz', S=SAMPLE, N=['1', '2']),
                bam = expand('resultados/aligned/{S}.sorted.bam', S=SAMPLE),
                vcf = expand('resultados/freebayes/{S}.vcf', S=SAMPLE)
                

# AnÃ¡lisis

rule trim:
        input:
                r1="data/{S}_R1.fastq.gz",
                r2="data/{S}_R2.fastq.gz"
        output:
                r1='resultados/trimmed/{S}_trimmed_1.fastq.gz',
                r2='resultados/trimmed/{S}_trimmed_2.fastq.gz',
                html='resultados/trimmed/{S}_fastp.html'
        resources:
                runtime=90,
                cpus_per_task=4,
                mem_mb=4000,
                account="othcx"
                
        shell:
                """
                module load cesga/2020 gcccore/system fastp/0.22.0 
                fastp -i {input.r1} -I {input.r2} \
                -o {output.r1} -O {output.r2} \
                --detect_adapter_for_pe \
                --trim_poly_g --poly_g_min_len=10 \
                --low_complexity_filter \
                --overrepresentation_analysis \
                --correction \
                --html={output.html} \
                module unload cesga/2020 gcccore/system fastp/0.22.0
                """
rule bwa_mem:
        input: 
                r1='resultados/trimmed/{S}_trimmed_1.fastq.gz',
                r2='resultados/trimmed/{S}_trimmed_2.fastq.gz'
        output:
                'resultados/aligned/{S}.unsorted.bam'
        resources:
                runtime=2880,
                cpus_per_task=16,
                mem_mb=64000,
                account="othcx"
        params:
                ref=REF_GENOME,
                rg="@RG\\tID:{S}\\tSM:{S}\\tPL:ILLUMINA" 
        shell:
                """
                module load cesga/2020 gcccore/system bwa/0.7.17 samtools/1.19
                mkdir -p resultados/aligned 
                bwa mem  -R '{params.rg}' {params.ref} {input.r1} {input.r2} | \
                samtools view -Sb - > {output} 
                module unload cesga/2020 gcccore/system bwa/0.7.17 samtools/1.19
                """

rule samtools_sort:
        input:
                'resultados/aligned/{S}.unsorted.bam'
        output:
                bam='resultados/aligned/{S}.sorted.bam',
                bai='resultados/aligned/{S}.sorted.bam.bai'
        resources:
                runtime=900,
                cpus_per_task=8,
                mem_mb=64000,
                account="othcx"
        shell:
                """
                module load cesga/2020 gcccore/system samtools/1.19
                samtools sort -o {output.bam} {input}
                samtools index {output.bam}
                module unload cesga/2020 gcccore/system samtools/1.19
                """


rule freebayes:
        input:
                bam='resultados/aligned/{S}.sorted.bam'
        output:
                vcf='resultados/freebayes/{S}.vcf'
        resources:
                runtime=2880,
                cpus_per_task=16,
                mem_mb=12000,
                account='othcx'
        params:
                ref=REF_GENOME
        shell:
                """
                module load cesga/2020 gcc/system openmpi/4.0.5_ft3 freebayes/1.3.7 
                mkdir -p resultados/freebayes 
                freebayes -f {params.ref} --min-alternate-count 10 --min-base-quality 20 {input.bam} > {output.vcf} 
                module unload cesga/2020 gcc/system openmpi/4.0.5_ft3 freebayes/1.3.7 
                """